/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { WithCityItemRequestBuilder } from './item/';
import { BaseRequestBuilder, getPathParameters, type RequestAdapter } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v1/api/geolocation
 */
export class GeolocationRequestBuilder extends BaseRequestBuilder<GeolocationRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.v1.api.geolocation.item collection
     * @param city Unique identifier of the item
     * @returns a WithCityItemRequestBuilder
     */
    public byCity(city: string) : WithCityItemRequestBuilder {
        if(!city) throw new Error("city cannot be undefined");
        const urlTplParams = getPathParameters(this.pathParameters);
        urlTplParams["city"] = city
        return new WithCityItemRequestBuilder(urlTplParams, this.requestAdapter);
    }
    /**
     * Instantiates a new GeolocationRequestBuilder and sets the default values.
     * @param pathParameters The raw url or the Url template parameters for the request.
     * @param requestAdapter The request adapter to use to execute the requests.
     */
    public constructor(pathParameters: Record<string, unknown> | string | undefined, requestAdapter: RequestAdapter) {
        super(pathParameters, requestAdapter, "{+baseurl}/v1/api/geolocation", (x, y) => new GeolocationRequestBuilder(x, y));
    }
}
/* tslint:enable */
/* eslint-enable */
