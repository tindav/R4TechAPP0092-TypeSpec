/*
 * Ready4Tech API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace IO.Swagger.Models;

/// <summary>
///     Output response for DawnDusk Calculation
/// </summary>
[DataContract]
public class DawnDuskCalculationOutputResponse : IEquatable<DawnDuskCalculationOutputResponse>
{
    /// <summary>
    ///     Gets or Sets CalculationId
    /// </summary>
    [Required]
    [RegularExpression("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[890abAB]{1}[0-9a-fA-F]{3}-[0-9a-fA-F]{12}$")]
    [DataMember(Name = "calculationId")]
    public Guid? CalculationId { get; set; }

    /// <summary>
    ///     Sunrise time
    /// </summary>
    /// <value>Sunrise time</value>

    [DataMember(Name = "Sunrise")]
    public DateTime? Sunrise { get; set; }

    /// <summary>
    ///     Sunset time
    /// </summary>
    /// <value>Sunset time</value>

    [DataMember(Name = "Sunset")]
    public DateTime? Sunset { get; set; }

    /// <summary>
    ///     Zenith time
    /// </summary>
    /// <value>Zenith time</value>

    [DataMember(Name = "Zenith")]
    public DateTime? Zenith { get; set; }

    /// <summary>
    ///     Returns true if DawnDuskCalculationOutputResponse instances are equal
    /// </summary>
    /// <param name="other">Instance of DawnDuskCalculationOutputResponse to be compared</param>
    /// <returns>Boolean</returns>
    public bool Equals(DawnDuskCalculationOutputResponse other)
    {
        if (ReferenceEquals(null, other)) return false;
        if (ReferenceEquals(this, other)) return true;

        return
            (
                CalculationId == other.CalculationId ||
                (CalculationId != null &&
                 CalculationId.Equals(other.CalculationId))
            ) &&
            (
                Sunrise == other.Sunrise ||
                (Sunrise != null &&
                 Sunrise.Equals(other.Sunrise))
            ) &&
            (
                Sunset == other.Sunset ||
                (Sunset != null &&
                 Sunset.Equals(other.Sunset))
            ) &&
            (
                Zenith == other.Zenith ||
                (Zenith != null &&
                 Zenith.Equals(other.Zenith))
            );
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class DawnDuskCalculationOutputResponse {\n");
        sb.Append("  CalculationId: ").Append(CalculationId).Append("\n");
        sb.Append("  Sunrise: ").Append(Sunrise).Append("\n");
        sb.Append("  Sunset: ").Append(Sunset).Append("\n");
        sb.Append("  Zenith: ").Append(Zenith).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public string ToJson() => JsonConvert.SerializeObject(this, Formatting.Indented);

    /// <summary>
    ///     Returns true if objects are equal
    /// </summary>
    /// <param name="obj">Object to be compared</param>
    /// <returns>Boolean</returns>
    public override bool Equals(object obj)
    {
        if (ReferenceEquals(null, obj)) return false;
        if (ReferenceEquals(this, obj)) return true;
        return obj.GetType() == GetType() && Equals((DawnDuskCalculationOutputResponse)obj);
    }

    /// <summary>
    ///     Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode()
    {
        unchecked // Overflow is fine, just wrap
        {
            var hashCode = 41;
            // Suitable nullity checks etc, of course :)
            if (CalculationId != null)
                hashCode = hashCode * 59 + CalculationId.GetHashCode();
            if (Sunrise != null)
                hashCode = hashCode * 59 + Sunrise.GetHashCode();
            if (Sunset != null)
                hashCode = hashCode * 59 + Sunset.GetHashCode();
            if (Zenith != null)
                hashCode = hashCode * 59 + Zenith.GetHashCode();
            return hashCode;
        }
    }

    #region Operators

#pragma warning disable 1591

    public static bool operator ==(DawnDuskCalculationOutputResponse left, DawnDuskCalculationOutputResponse right) =>
        Equals(left, right);

    public static bool operator !=(DawnDuskCalculationOutputResponse left, DawnDuskCalculationOutputResponse right) =>
        !Equals(left, right);

#pragma warning restore 1591

    #endregion Operators
}